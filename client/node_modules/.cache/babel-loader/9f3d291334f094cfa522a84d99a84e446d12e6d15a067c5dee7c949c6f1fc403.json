{"ast":null,"code":"var _jsxFileName = \"/Users/Inspater/Desktop/postly/client/src/components/Post.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Post({\n  post,\n  onPostUpdated,\n  onDelete\n}) {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [title, setTitle] = useState(post.title);\n  const [content, setContent] = useState(post.content);\n  const [author, setAuthor] = useState(post.author);\n  const handleUpdateClick = async () => {\n    setIsEditing(false);\n    await onPostUpdated(post._id, title, content, author);\n  };\n  const handleDeleteClick = () => {\n    onDelete(post._id);\n  };\n  const handleEditClick = () => {\n    setIsEditing(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: author,\n        onChange: e => setAuthor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateClick,\n        children: \"Update Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEditClick,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteClick,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Post, \"MsWZ3RwAakLln4mKmIwL2HRUi6s=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Post","post","onPostUpdated","onDelete","_s","isEditing","setIsEditing","title","setTitle","content","setContent","author","setAuthor","handleUpdateClick","_id","handleDeleteClick","handleEditClick","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/Inspater/Desktop/postly/client/src/components/Post.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Post({ post, onPostUpdated, onDelete }) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [title, setTitle] = useState(post.title);\n  const [content, setContent] = useState(post.content);\n  const [author, setAuthor] = useState(post.author);\n\n  const handleUpdateClick = async () => {\n    setIsEditing(false);\n    await onPostUpdated(post._id, title, content, author);\n  };\n\n  const handleDeleteClick = () => {\n    onDelete(post._id);\n  };\n\n  const handleEditClick = () => {\n    setIsEditing(true);\n  };\n\n  return (\n    <div>\n      {isEditing ? (\n        <>\n          <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\n          <textarea value={content} onChange={(e) => setContent(e.target.value)} />\n          <input type=\"text\" value={author} onChange={(e) => setAuthor(e.target.value)} />\n          <button onClick={handleUpdateClick}>Update Post</button>\n        </>\n      ) : (\n        <>\n          <h3>{title}</h3>\n          <p>{content}</p>\n          <p>{author}</p>\n          <button onClick={handleEditClick}>Edit</button>\n          <button onClick={handleDeleteClick}>Delete</button>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Post;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}