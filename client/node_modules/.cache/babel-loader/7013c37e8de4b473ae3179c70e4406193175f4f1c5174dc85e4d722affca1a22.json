{"ast":null,"code":"var _jsxFileName = \"/Users/Inspater/Desktop/postly/client/src/components/Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Post from \"./Post\";\nimport { Box, TextField, Button, Container } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newContent, setNewContent] = useState(\"\");\n  const [newAuthor, setNewAuthor] = useState(\"\");\n  const fetchPosts = async () => {\n    const response = await fetch(\"/posts\");\n    const data = await response.json();\n    setPosts(data);\n  };\n  const createPost = async e => {\n    e.preventDefault();\n    const response = await fetch(\"/posts\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title: newTitle,\n        content: newContent,\n        author: newAuthor\n      })\n    });\n    const data = await response.json();\n    setPosts([data, ...posts]);\n    setNewTitle(\"\");\n    setNewContent(\"\");\n    setNewAuthor(\"\");\n  };\n  const editPost = async (id, title, content, author) => {\n    const response = await fetch(`/posts/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title,\n        content,\n        author\n      })\n    });\n    const data = await response.json();\n    setPosts(posts.map(post => post._id === id ? data : post));\n  };\n  const deletePost = async id => {\n    const response = await fetch(`/posts/${id}`, {\n      method: \"DELETE\"\n    });\n    if (response.ok) {\n      setPosts(posts.filter(post => post._id !== id));\n    }\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createPost,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Author\",\n          value: newAuthor,\n          onChange: e => setNewAuthor(e.target.value),\n          placeholder: \"Author\",\n          required: true,\n          fullWidth: true,\n          multiline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Title\",\n          value: newTitle,\n          onChange: e => setNewTitle(e.target.value),\n          placeholder: \"Title\",\n          required: true,\n          fullWidth: true,\n          multiline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Content\",\n          value: newContent,\n          onChange: e => setNewContent(e.target.value),\n          placeholder: \"Content\",\n          required: true,\n          fullWidth: true,\n          multiline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mb: 2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          type: \"submit\",\n          fullWidth: true,\n          children: \"Add New Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post,\n      editPost: editPost,\n      deletePost: deletePost\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Posts, \"pwYsDuXTD/gbcwLw8FQXM5Pp8Fk=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","Post","Box","TextField","Button","Container","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","newTitle","setNewTitle","newContent","setNewContent","newAuthor","setNewAuthor","fetchPosts","response","fetch","data","json","createPost","e","preventDefault","method","headers","body","JSON","stringify","title","content","author","editPost","id","map","post","_id","deletePost","ok","filter","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","mb","label","value","onChange","target","placeholder","required","fullWidth","multiline","variant","type","_c","$RefreshReg$"],"sources":["/Users/Inspater/Desktop/postly/client/src/components/Posts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Post from \"./Post\";\nimport { Box, TextField, Button, Container } from '@mui/material';\n\nfunction Posts() {\n  const [posts, setPosts] = useState([]);\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newContent, setNewContent] = useState(\"\");\n  const [newAuthor, setNewAuthor] = useState(\"\");\n\n  const fetchPosts = async () => {\n    const response = await fetch(\"/posts\");\n    const data = await response.json();\n    setPosts(data);\n  };\n\n  const createPost = async (e) => {\n    e.preventDefault();\n    const response = await fetch(\"/posts\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ title: newTitle, content: newContent, author: newAuthor }),\n    });\n    const data = await response.json();\n    setPosts([data, ...posts]);\n    setNewTitle(\"\");\n    setNewContent(\"\");\n    setNewAuthor(\"\");\n  };\n\n  const editPost = async (id, title, content, author) => {\n    const response = await fetch(`/posts/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ title, content, author }),\n    });\n    const data = await response.json();\n    setPosts(posts.map((post) => (post._id === id ? data : post)));\n  };\n\n  const deletePost = async (id) => {\n    const response = await fetch(`/posts/${id}`, {\n      method: \"DELETE\",\n    });\n    if (response.ok) {\n      setPosts(posts.filter((post) => post._id !== id));\n    }\n  };\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  return (\n    <Container maxWidth=\"sm\">\n      <h2>Posts</h2>\n      <form onSubmit={createPost}>\n        <Box mb={2}>\n          <TextField\n            label=\"Author\"\n            value={newAuthor}\n            onChange={(e) => setNewAuthor(e.target.value)}\n            placeholder=\"Author\"\n            required\n            fullWidth\n            multiline\n          />\n          <TextField\n            label=\"Title\"\n            value={newTitle}\n            onChange={(e) => setNewTitle(e.target.value)}\n            placeholder=\"Title\"\n            required\n            fullWidth\n            multiline\n          />\n          <TextField\n            label=\"Content\"\n            value={newContent}\n            onChange={(e) => setNewContent(e.target.value)}\n            placeholder=\"Content\"\n            required\n            fullWidth\n            multiline\n          />\n        </Box>\n        <Box mb={2}>\n          <Button variant=\"contained\" type=\"submit\" fullWidth>Add New Post</Button>\n        </Box>\n      </form>\n      {posts.map((post) => (\n        <Post key={post._id} post={post} editPost={editPost} deletePost={deletePost} />\n      ))}\n    </Container>\n  );\n}\n\nexport default Posts;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,GAAG,EAAEC,SAAS,EAAEC,MAAM,EAAEC,SAAS,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMkB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAQ,CAAC;IACtC,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCX,QAAQ,CAACU,IAAI,CAAC;EAChB,CAAC;EAED,MAAME,UAAU,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAQ,EAAE;MACrCM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,KAAK,EAAEnB,QAAQ;QAAEoB,OAAO,EAAElB,UAAU;QAAEmB,MAAM,EAAEjB;MAAU,CAAC;IAClF,CAAC,CAAC;IACF,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCX,QAAQ,CAAC,CAACU,IAAI,EAAE,GAAGX,KAAK,CAAC,CAAC;IAC1BG,WAAW,CAAC,EAAE,CAAC;IACfE,aAAa,CAAC,EAAE,CAAC;IACjBE,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,MAAMiB,QAAQ,GAAG,MAAAA,CAAOC,EAAE,EAAEJ,KAAK,EAAEC,OAAO,EAAEC,MAAM,KAAK;IACrD,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAE,UAASe,EAAG,EAAC,EAAE;MAC3CT,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,KAAK;QAAEC,OAAO;QAAEC;MAAO,CAAC;IACjD,CAAC,CAAC;IACF,MAAMZ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCX,QAAQ,CAACD,KAAK,CAAC0B,GAAG,CAAEC,IAAI,IAAMA,IAAI,CAACC,GAAG,KAAKH,EAAE,GAAGd,IAAI,GAAGgB,IAAK,CAAC,CAAC;EAChE,CAAC;EAED,MAAME,UAAU,GAAG,MAAOJ,EAAE,IAAK;IAC/B,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAE,UAASe,EAAG,EAAC,EAAE;MAC3CT,MAAM,EAAE;IACV,CAAC,CAAC;IACF,IAAIP,QAAQ,CAACqB,EAAE,EAAE;MACf7B,QAAQ,CAACD,KAAK,CAAC+B,MAAM,CAAEJ,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKH,EAAE,CAAC,CAAC;IACnD;EACF,CAAC;EAEDpC,SAAS,CAAC,MAAM;IACdmB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA,CAACF,SAAS;IAACqC,QAAQ,EAAC,IAAI;IAAAC,QAAA,gBACtBpC,OAAA;MAAAoC,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdxC,OAAA;MAAMyC,QAAQ,EAAEzB,UAAW;MAAAoB,QAAA,gBACzBpC,OAAA,CAACL,GAAG;QAAC+C,EAAE,EAAE,CAAE;QAAAN,QAAA,gBACTpC,OAAA,CAACJ,SAAS;UACR+C,KAAK,EAAC,QAAQ;UACdC,KAAK,EAAEnC,SAAU;UACjBoC,QAAQ,EAAG5B,CAAC,IAAKP,YAAY,CAACO,CAAC,CAAC6B,MAAM,CAACF,KAAK,CAAE;UAC9CG,WAAW,EAAC,QAAQ;UACpBC,QAAQ;UACRC,SAAS;UACTC,SAAS;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACFxC,OAAA,CAACJ,SAAS;UACR+C,KAAK,EAAC,OAAO;UACbC,KAAK,EAAEvC,QAAS;UAChBwC,QAAQ,EAAG5B,CAAC,IAAKX,WAAW,CAACW,CAAC,CAAC6B,MAAM,CAACF,KAAK,CAAE;UAC7CG,WAAW,EAAC,OAAO;UACnBC,QAAQ;UACRC,SAAS;UACTC,SAAS;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACFxC,OAAA,CAACJ,SAAS;UACR+C,KAAK,EAAC,SAAS;UACfC,KAAK,EAAErC,UAAW;UAClBsC,QAAQ,EAAG5B,CAAC,IAAKT,aAAa,CAACS,CAAC,CAAC6B,MAAM,CAACF,KAAK,CAAE;UAC/CG,WAAW,EAAC,SAAS;UACrBC,QAAQ;UACRC,SAAS;UACTC,SAAS;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNxC,OAAA,CAACL,GAAG;QAAC+C,EAAE,EAAE,CAAE;QAAAN,QAAA,eACTpC,OAAA,CAACH,MAAM;UAACsD,OAAO,EAAC,WAAW;UAACC,IAAI,EAAC,QAAQ;UAACH,SAAS;UAAAb,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EACNrC,KAAK,CAAC0B,GAAG,CAAEC,IAAI,iBACd9B,OAAA,CAACN,IAAI;MAAgBoC,IAAI,EAAEA,IAAK;MAACH,QAAQ,EAAEA,QAAS;MAACK,UAAU,EAAEA;IAAW,GAAjEF,IAAI,CAACC,GAAG;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA2D,CAC/E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB;AAACtC,EAAA,CA/FQD,KAAK;AAAAoD,EAAA,GAALpD,KAAK;AAiGd,eAAeA,KAAK;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}