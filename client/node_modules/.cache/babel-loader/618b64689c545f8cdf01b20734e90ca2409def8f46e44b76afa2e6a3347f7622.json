{"ast":null,"code":"var _jsxFileName = \"/Users/Inspater/Desktop/postly/client/src/components/Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [editingPostId, setEditingPostId] = useState(null);\n  const fetchPosts = async () => {\n    const response = await fetch(\"/posts\");\n    const data = await response.json();\n    setPosts(data);\n  };\n  const createPost = async e => {\n    e.preventDefault();\n    const response = await fetch(`/posts/${editingPostId || \"\"}`, {\n      method: editingPostId ? \"PUT\" : \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title,\n        content,\n        author\n      })\n    });\n    const data = await response.json();\n    if (editingPostId) {\n      setPosts(posts.map(post => post._id === editingPostId ? data : post));\n    } else {\n      setPosts([data, ...posts]);\n    }\n    setTitle(\"\");\n    setContent(\"\");\n    setAuthor(\"\");\n    setEditingPostId(null);\n  };\n  const editPost = post => {\n    setTitle(post.title);\n    setContent(post.content);\n    setAuthor(post.author);\n    setEditingPostId(post._id);\n  };\n  const deletePost = async id => {\n    const response = await fetch(`/posts/${id}`, {\n      method: \"DELETE\"\n    });\n    if (response.ok) {\n      setPosts(posts.filter(post => post._id !== id));\n    }\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => editPost(post),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deletePost(post._id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createPost,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value),\n        placeholder: \"Content\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: author,\n        onChange: e => setAuthor(e.target.value),\n        placeholder: \"Author\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editingPostId ? \"Update Post\" : \"Add New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Posts, \"Gvbv6fZ0j/ssk0h9VpmRBsQsadw=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","title","setTitle","content","setContent","author","setAuthor","editingPostId","setEditingPostId","fetchPosts","response","fetch","data","json","createPost","e","preventDefault","method","headers","body","JSON","stringify","map","post","_id","editPost","deletePost","id","ok","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/Inspater/Desktop/postly/client/src/components/Posts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction Posts() {\n  const [posts, setPosts] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [editingPostId, setEditingPostId] = useState(null);\n\n  const fetchPosts = async () => {\n    const response = await fetch(\"/posts\");\n    const data = await response.json();\n    setPosts(data);\n  };\n\n  const createPost = async (e) => {\n    e.preventDefault();\n    const response = await fetch(`/posts/${editingPostId || \"\"}`, {\n      method: editingPostId ? \"PUT\" : \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ title, content, author }),\n    });\n    const data = await response.json();\n    if (editingPostId) {\n      setPosts(posts.map((post) => (post._id === editingPostId ? data : post)));\n    } else {\n      setPosts([data, ...posts]);\n    }\n    setTitle(\"\");\n    setContent(\"\");\n    setAuthor(\"\");\n    setEditingPostId(null);\n  };\n\n  const editPost = (post) => {\n    setTitle(post.title);\n    setContent(post.content);\n    setAuthor(post.author);\n    setEditingPostId(post._id);\n  };\n\n  const deletePost = async (id) => {\n    const response = await fetch(`/posts/${id}`, {\n      method: \"DELETE\",\n    });\n    if (response.ok) {\n      setPosts(posts.filter((post) => post._id !== id));\n    }\n  };\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  return (\n    <div>\n      <h2>Posts</h2>\n      {posts.map((post) => (\n        <div key={post._id}>\n          <h3>{post.title}</h3>\n          <p>{post.content}</p>\n          <p>{post.author}</p>\n          <button onClick={() => editPost(post)}>Edit</button>\n          <button onClick={() => deletePost(post._id)}>Delete</button>\n        </div>\n      ))}\n      <form onSubmit={createPost}>\n        <input\n          type=\"text\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          placeholder=\"Title\"\n          required\n        />\n        <textarea\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n          placeholder=\"Content\"\n          required\n        />\n        <input\n          type=\"text\"\n          value={author}\n          onChange={(e) => setAuthor(e.target.value)}\n          placeholder=\"Author\"\n          required\n        />\n        <button type=\"submit\">{editingPostId ? \"Update Post\" : \"Add New Post\"}</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Posts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}