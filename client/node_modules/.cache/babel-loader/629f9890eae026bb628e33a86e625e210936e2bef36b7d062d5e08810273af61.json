{"ast":null,"code":"var _jsxFileName = \"/Users/Inspater/Desktop/postly/client/src/components/Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Post from \"./Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newContent, setNewContent] = useState(\"\");\n  const [newAuthor, setNewAuthor] = useState(\"\");\n  const fetchPosts = async () => {\n    const response = await fetch(\"/posts\");\n    const data = await response.json();\n    setPosts(data);\n  };\n  const createPost = async e => {\n    e.preventDefault();\n    const response = await fetch(\"/posts\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title: newTitle,\n        content: newContent,\n        author: newAuthor\n      })\n    });\n    const data = await response.json();\n    setPosts([data, ...posts]);\n    setNewTitle(\"\");\n    setNewContent(\"\");\n    setNewAuthor(\"\");\n  };\n  const updatePost = async (id, title, content, author) => {\n    const response = await fetch(`/posts/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title,\n        content,\n        author\n      })\n    });\n    const data = await response.json();\n    setPosts(posts.map(post => post._id === id ? data : post));\n  };\n  const deletePost = async id => {\n    const response = await fetch(`/posts/${id}`, {\n      method: \"DELETE\"\n    });\n    if (response.ok) {\n      setPosts(posts.filter(post => post._id !== id));\n    }\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createPost,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTitle,\n        onChange: e => setNewTitle(e.target.value),\n        placeholder: \"Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newContent,\n        onChange: e => setNewContent(e.target.value),\n        placeholder: \"Content\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newAuthor,\n        onChange: e => setNewAuthor(e.target.value),\n        placeholder: \"Author\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post,\n      onPostUpdated: updatePost,\n      onDelete: deletePost\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 8\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 4\n  }, this);\n}\n_s(Posts, \"pwYsDuXTD/gbcwLw8FQXM5Pp8Fk=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","Post","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","newTitle","setNewTitle","newContent","setNewContent","newAuthor","setNewAuthor","fetchPosts","response","fetch","data","json","createPost","e","preventDefault","method","headers","body","JSON","stringify","title","content","author","updatePost","id","map","post","_id","deletePost","ok","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","onPostUpdated","onDelete","_c","$RefreshReg$"],"sources":["/Users/Inspater/Desktop/postly/client/src/components/Posts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Post from \"./Post\";\n\nfunction Posts() {\n const [posts, setPosts] = useState([]);\n const [newTitle, setNewTitle] = useState(\"\");\n const [newContent, setNewContent] = useState(\"\");\n const [newAuthor, setNewAuthor] = useState(\"\");\n\n const fetchPosts = async () => {\n   const response = await fetch(\"/posts\");\n   const data = await response.json();\n   setPosts(data);\n };\n\n const createPost = async (e) => {\n   e.preventDefault();\n   const response = await fetch(\"/posts\", {\n     method: \"POST\",\n     headers: {\n       \"Content-Type\": \"application/json\",\n     },\n     body: JSON.stringify({ title: newTitle, content: newContent, author: newAuthor }),\n   });\n   const data = await response.json();\n   setPosts([data, ...posts]);\n   setNewTitle(\"\");\n   setNewContent(\"\");\n   setNewAuthor(\"\");\n };\n\n const updatePost = async (id, title, content, author) => {\n   const response = await fetch(`/posts/${id}`, {\n     method: \"PUT\",\n     headers: {\n       \"Content-Type\": \"application/json\",\n     },\n     body: JSON.stringify({ title, content, author }),\n   });\n   const data = await response.json();\n   setPosts(posts.map((post) => (post._id === id ? data : post)));\n };\n\n const deletePost = async (id) => {\n   const response = await fetch(`/posts/${id}`, {\n     method: \"DELETE\",\n   });\n   if (response.ok) {\n     setPosts(posts.filter((post) => post._id !== id));\n   }\n };\n\n useEffect(() => {\n   fetchPosts();\n }, []);\n\n return (\n   <div>\n     <h2>Posts</h2>\n     <form onSubmit={createPost}>\n       <input\n         type=\"text\"\n         value={newTitle}\n         onChange={(e) => setNewTitle(e.target.value)}\n         placeholder=\"Title\"\n         required\n       />\n       <textarea\n         value={newContent}\n         onChange={(e) => setNewContent(e.target.value)}\n         placeholder=\"Content\"\n         required\n       />\n       <input\n         type=\"text\"\n         value={newAuthor}\n         onChange={(e) => setNewAuthor(e.target.value)}\n         placeholder=\"Author\"\n         required\n       />\n       <button type=\"submit\">Add New Post</button>\n     </form>\n     {posts.map((post) => (\n       <Post key={post._id} post={post} onPostUpdated={updatePost} onDelete={deletePost} />\n     ))}\n   </div>\n );\n}\n\nexport default Posts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}