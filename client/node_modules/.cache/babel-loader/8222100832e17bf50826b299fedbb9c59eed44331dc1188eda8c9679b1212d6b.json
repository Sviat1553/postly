{"ast":null,"code":"var _jsxFileName = \"/Users/Inspater/Desktop/postly/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [posts, setPosts] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:3000/posts').then(res => {\n      if (!res.ok) {\n        throw Error('Could not fetch the data for that resource');\n      }\n      return res.json();\n    }).then(data => {\n      setPosts(data);\n      console.log(data);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  }, []);\n  const createPost = async e => {\n    e.preventDefault();\n    const newPost = {\n      title: e.target.title.value,\n      body: e.target.body.value\n    };\n    try {\n      const response = await fetch('http://localhost:3000/posts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newPost)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const post = await response.json();\n\n      // Add the newly created post to the list of posts\n      setPosts([post, ...posts]);\n\n      // Reset the form\n      e.target.reset();\n    } catch (error) {\n      console.log('There has been a problem with your fetch operation: ', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createPost,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        name: \"title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"body\",\n        name: \"body\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), posts && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"wpRH37fUtUObFvrmE0Zv7YZafpY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","posts","setPosts","fetch","then","res","ok","Error","json","data","console","log","catch","err","message","createPost","e","preventDefault","newPost","title","target","value","body","response","method","headers","JSON","stringify","status","post","reset","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","name","required","map","_id","_c","$RefreshReg$"],"sources":["/Users/Inspater/Desktop/postly/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst App = () => {\n  const [posts, setPosts] = useState(null);\n\n  useEffect(() => {\n    fetch('http://localhost:3000/posts')\n      .then(res => {\n        if (!res.ok) {\n          throw Error('Could not fetch the data for that resource');\n        } \n        return res.json();\n      })\n      .then(data => {\n        setPosts(data);\n        console.log(data);\n      })\n      .catch(err => {\n        console.log(err.message);\n      })\n  }, []);\n\n  const createPost = async (e) => {\n    e.preventDefault();\n    \n    const newPost = {\n        title: e.target.title.value,\n        body: e.target.body.value\n    }\n\n    try {\n        const response = await fetch('http://localhost:3000/posts', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(newPost),\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const post = await response.json();\n        \n        // Add the newly created post to the list of posts\n        setPosts([post, ...posts]);\n\n        // Reset the form\n        e.target.reset();\n\n    } catch (error) {\n        console.log('There has been a problem with your fetch operation: ', error);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Posts</h1>\n      <form onSubmit={createPost}>\n        <input type=\"text\" id=\"title\" name=\"title\" required />\n        <textarea id=\"body\" name=\"body\" required />\n        <button>Add New Post</button>\n      </form>\n      {posts && (\n        <div className=\"post-list\">\n          {posts.map(post => (\n            <div className=\"post-preview\" key={post._id} >\n              <h2>{post.title}</h2>\n              <p>{post.body}</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}