{"ast":null,"code":"var _jsxFileName = \"/Users/Inspater/Desktop/postly/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  useEffect(() => {\n    fetch('/posts').then(res => res.json()).then(data => {\n      setPosts(data);\n      setLoading(false);\n    });\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const post = {\n      title,\n      body\n    };\n\n    // Send a POST request to the server to create a new post\n    const response = await fetch('/posts', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(post)\n    });\n    if (response.ok) {\n      // If the request was successful, add the new post to the state\n      setPosts([post, ...posts]);\n      setTitle(\"\");\n      setBody(\"\");\n    } else {\n      // If something went wrong, log the status code\n      console.error(`Error: ${response.status}`);\n    }\n  };\n  if (loading) return 'Loading...';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: body,\n        onChange: e => setBody(e.target.value),\n        placeholder: \"Body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CJEH5aIgw/ry+wZbHrGPL8LvULs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","posts","setPosts","loading","setLoading","title","setTitle","body","setBody","fetch","then","res","json","data","handleSubmit","e","preventDefault","post","response","method","headers","JSON","stringify","ok","console","error","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_id","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/Inspater/Desktop/postly/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  useEffect(() => {\n    fetch('/posts')\n      .then((res) => res.json())\n      .then((data) => {\n        setPosts(data);\n        setLoading(false);\n      });\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const post = { title, body };\n  \n    // Send a POST request to the server to create a new post\n    const response = await fetch('/posts', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(post),\n    });\n\n    if (response.ok) {\n      // If the request was successful, add the new post to the state\n      setPosts([post, ...posts]);\n      setTitle(\"\");\n      setBody(\"\");\n    } else {\n      // If something went wrong, log the status code\n      console.error(`Error: ${response.status}`);\n    }\n  };\n\n  if (loading) return 'Loading...';\n\n  return (\n    <div className=\"App\">\n      <h1>Posts</h1>\n      {posts.map((post) => (\n        <div key={post._id}>\n          <h2>{post.title}</h2>\n          <p>{post.body}</p>\n        </div>\n      ))}\n      <h2>Add a New Post</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          placeholder=\"Title\"\n        />\n        <input\n          type=\"text\"\n          value={body}\n          onChange={(e) => setBody(e.target.value)}\n          placeholder=\"Body\"\n        />\n        <button type=\"submit\">Add New Post</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}